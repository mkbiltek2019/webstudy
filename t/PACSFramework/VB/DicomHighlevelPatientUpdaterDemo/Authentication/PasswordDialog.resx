<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>